#!/usr/bin/env bash

# File:    picrename
# Author:  Martin Ochs
# License: MIT
# Brief:   Rename images accourding to exif date

# Script info
script_name="picrename"
script_version="v1.3"
script_tools="echo date mv exiftool awk tr basename"



# Activate debug output (uncomment if needed)
#set -x

# From here on warn about unset variables
set -u

# Definition of colors
color_off="\033[0m"
color_black="\033[0;30m"
color_red="\033[0;31m"
color_green="\033[0;32m"
color_yellow="\033[0;33m"
color_blue="\033[0;34m"
color_purple="\033[0;35m"
color_cyan="\033[0;36m"
color_white="\033[0;37m"
color_bold_black="\033[1;30m"
color_bold_red="\033[1;31m"
color_bold_green="\033[1;32m"
color_bold_yellow="\033[1;33m"
color_bold_blue="\033[1;34m"
color_bold_purple="\033[1;35m"
color_bold_cyan="\033[1;36m"
color_bold_white="\033[1;37m"

# Definition of used theme colors
if test -t 1; then
  color_header=$color_bold_red
  color_time=$color_bold_cyan
  color_section=$color_bold_yellow
  color_mark=$color_bold_green
  color_error=$color_bold_red
else
  color_off=
  color_header=
  color_time=
  color_section=
  color_mark=
  color_error=
fi

# Show Terminal Environment and script startup info
echo -en "$color_off""Running $color_mark$script_name$color_off version $color_mark$script_version$color_off as user $color_mark$(id -un)$color_off"
if   [ $# -eq 1 ]; then
  echo -e " with parameter $color_mark$@$color_off"
elif [ $# -gt 1 ]; then
  echo -en " with $color_mark$#$color_off parameters"
  for x in "$@"; do
    echo -en " $color_mark$x$color_off"
  done
else
  echo -e " with $color_mark""no""$color_off parameters"
fi
echo

# Check Parameters
for x in $*; do        # Method 1: Check all parameters in a loop without changing them
  if [ "$x" = "-h" ] || [ "$x" = "--help" ]; then
    echo "Usage: picrename [OPTIONS] FILES"
    echo
    echo "picrename will take the EXIF date from the pictures and rename the file accordingly."
    echo
    echo "Options"
    echo "-h, --help      This help"
    echo
    echo "Exit status:"
    echo " 0  if OK"
    echo " 1  if ERROR"
    exit 0
  fi
done

# Show script startup info
echo -ne "$color_header"
echo "       _                                          "
echo " _ __ (_) ___ _ __ ___ _ __   __ _ _ __ ___   ___ "
echo "| '_ \| |/ __| '__/ _ \ '_ \ / _\` | '_ \` _ \ / _ \\"
echo "| |_) | | (__| | |  __/ | | | (_| | | | | | |  __/"
echo "| .__/|_|\___|_|  \___|_| |_|\__,_|_| |_| |_|\___|"
echo "|_|                                               "
echo -e "$color_header$script_name $script_version$color_off"
echo

# Check for needed tools
for x in $script_tools; do # Run through tool list
  which $x > /dev/null
  if [ $? -ne 0 ]; then
    echo -e "Tool $color_mark$x$color_off is missing!"
    exit 1
  fi
done

# Start time measurement
echo -e "Starting $color_time$(date '+%Y-%m-%d %H:%M:%S')$color_off"
script_start=$(date '+%s')
echo

##############################################
# Script Start - Implement your script below #
###############################################################################

filecount=$#
filenum=0
for oldfile in "$@"; do

  filenum=$((filenum+1))
  echo -ne "$color_section[$filenum/$filecount]$color_off "

  if [ ! -d "$oldfile" ]; then
    # Get name parts of old file
    filename="${oldfile##*/}"
    directory="${oldfile:0:${#oldfile} - ${#filename}}"
    basename="${oldfile%.[^.]*}"
    extension=$(echo "${oldfile:${#basename} + 1}" | tr [:upper:] [:lower:])

    # Get EXIF info and build new name
    exifdate=$(exiftool -CreateDate -d "%Y-%m-%d %H.%M.%S" "$oldfile" 2>/dev/null | awk '{print $4 " " $5}')
    newfile="$directory$exifdate.$extension"

    # Add number for same filenames
    num=1
    while [ -e "$newfile" ]; do
      if [ "$oldfile" != "$newfile" ]; then
        num=$((num+1))
        newfile="$directory$exifdate ($num).$extension"
      else
        break
      fi
    done

    # Handle file renaming
    if [ "$exifdate" != "" ]; then
      if [ "$exifdate" != "0000:00:00 00:00:00" ]; then
        if [ "$oldfile" != "$newfile" ]; then
          echo -e "Renaming $color_mark'"$(basename "$oldfile")"'$color_off to $color_mark'"$(basename "$newfile")"'$color_off"
          mv -n "$oldfile" "$newfile"  # -n -> do not overwrite an existing file
        else
          echo -e "$color_mark'"$(basename "$oldfile")"'$color_off has already the correct name!"
        fi
      else
        echo -e "$color_mark'"$(basename "$oldfile")"'$color_error has a bad EXIF Date!$color_off"
      fi
    else
      echo -e "$color_mark'"$(basename "$oldfile")"'$color_error has no EXIF Date!$color_off"
    fi
  else
    echo -e "$color_mark'"$(basename "$oldfile")"'$color_error is a directory!$color_off"
  fi

done

###############################################################################
# Script End - Implement your script above #
############################################

# Stop time measurement
echo
echo -e "Finished $color_time$(date '+%Y-%m-%d %H:%M:%S')$color_off"
script_end="$(date '+%s')"
script_duration="$(( $script_end - $script_start ))"
echo -e "Duration $color_time$script_duration sec$color_off"
echo

# Exit script
exit 0
